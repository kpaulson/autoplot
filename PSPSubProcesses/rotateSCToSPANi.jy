def rotateSCToSPANi(SC_vector):
    '''
    Subroutine to rotate a given vector of PSP measurements from the spacecraft
    coordinate system to SPAN instrument coordinates
    
    input:
        rank1, rank2, or rank3 vector in S/C coordinates (where elements [0,1,2] correspond to [x,y,z])
    output:
        rank1, rank2, or rank3 vector rotated into SPAN coordinates 
    '''
    # Rotate S/C to SPAN:
    #    |    0              0         1 |     | sc_x |
    #    | -cos(theta)   sin(theta)    0 |  *  | sc_y |
    #    | -sin(theta)  -cos(theta)    0 |     | sc_z |
    
    span_theta = 20
    theta = toRadians(span_theta)
    
    if SC_vector.rank() == 1:
        SC_vector_scx = SC_vector[0]
        SC_vector_scy = SC_vector[1]
        SC_vector_scz = SC_vector[2]
    elif SC_vector.rank() == 2:
        SC_vector_scx = SC_vector[:,0]
        SC_vector_scy = SC_vector[:,1]
        SC_vector_scz = SC_vector[:,2]
    elif SC_vector.rank() == 3:
        SC_vector_scx = SC_vector[:,:,0]
        SC_vector_scy = SC_vector[:,:,1]
        SC_vector_scz = SC_vector[:,:,2]
    
    SC_vector_spanx = SC_vector_scz
    SC_vector_spany = SC_vector_scx*(-cos(theta)) + SC_vector_scy*(sin(theta))
    SC_vector_spanz = SC_vector_scx*(-sin(theta)) + SC_vector_scy*(-cos(theta))
    
    try:
        vectorLabel = SC_vector.property(QDataSet.LABEL)
        SC_vector_spanx.putProperty(QDataSet.LABEL,vectorLabel+'_spanx')
        SC_vector_spany.putProperty(QDataSet.LABEL,vectorLabel+'_spany')
        SC_vector_spanz.putProperty(QDataSet.LABEL,vectorLabel+'_spanz')
        SC_vector_spanx.putProperty(QDataSet.NAME, vectorLabel+'_spanx')
        SC_vector_spany.putProperty(QDataSet.NAME, vectorLabel+'_spany')
        SC_vector_spanz.putProperty(QDataSet.NAME, vectorLabel+'_spanz')
    except:
        pass
    
    SC_vector_span = bundle(SC_vector_spanx,SC_vector_spany,SC_vector_spanz)
    SC_vector_span.putProperty(QDataSet.DEPEND_0,SC_vector.property(QDataSet.DEPEND_0))
    
    return(SC_vector_span)
