# ##################################################################################

def mms_ephemerizer( mms_sc , starttime_input , endtime_input , plot_number ):
    """Subroutine to add MMS Magnetic Ephemeris ticks to a plot. 
    
    Parameters:
        mms_sc = The MMS spacecraft in question (eg 'mms1'). [string]
        starttime_input = Start time of aggregation. [string or Autoplot Timestamp]
        endtime_input = End time of aggregation. [string or Autoplot Timestamp]
        plot_number = The plot to which ephemeris ticks will be added. [integer]"""
    
    timerange = str(starttime_input)+' through '+str(endtime_input)
    
    try:
        mms_pos_sm = getDataSet('http://mmsdata.sr.unh.edu/%s/mec/srvy/l2/ephts04d/$Y/$m/%s_mec_srvy_l2_ephts04d_$Y$m$d_v$(v,sep).cdf?%s_mec_r_sm&timerange=%s'%(mms_sc,mms_sc,mms_sc,timerange))
        ephem_time = mms_pos_sm.property(QDataSet.DEPEND_0)
        
        uniqueness = uniq(ephem_time)
        mms_pos_sm = mms_pos_sm[uniqueness]
        ephem_time = ephem_time[uniqueness]
        
        Re = 6378.137
        mms_r = magnitude(mms_pos_sm)/Re
        theta = asin(mms_pos_sm[:,2]/magnitude(mms_pos_sm))
        phi = atan2(mms_pos_sm[:,1],mms_pos_sm[:,0])
        L_dipole_dwell = (magnitude(mms_pos_sm)/6371.)/(cos(theta)**2)
        if( (phi+PI).gt(0) ):
            MLT_dwell = mod((phi+PI)*12/PI,dataset(24))#(phi+PI)*12/PI
        elif( (phi+PI).le(0) ):
            MLT_dwell = mod(-(phi+PI)*12/PI,dataset(24))#-(phi+PI)*12/PI
    except:
        mms_pos_gsm = getDataSet('http://mmsdata.sr.unh.edu/%s/afg/srvy/ql/$Y/$m/%s_afg_srvy_ql_$Y$m$d_v$(v,sep).cdf?%s_ql_pos_gsm&timerange=%s'%(mms_sc,mms_sc,mms_sc,timerange))
        ephem_time = mms_pos_gsm.property(QDataSet.DEPEND_0)
    
        uniqueness = uniq(ephem_time)
        mms_pos_gsm = mms_pos_gsm[uniqueness]
        ephem_time = ephem_time[uniqueness]
        
        Re = 6378.137
        mms_r = mms_pos_gsm[:,3]/Re
        theta = asin(mms_pos_gsm[:,2]/mms_pos_gsm[:,3])
        phi = atan2(mms_pos_gsm[:,1],mms_pos_gsm[:,0])
        L_dipole_dwell = (mms_pos_gsm[:,3]/6371.)/(cos(theta)**2)
        if( (phi+PI).gt(0) ):
            MLT_dwell = mod((phi+PI)*12/PI,dataset(24))#(phi+PI)*12/PI
        elif( (phi+PI).le(0) ):
            MLT_dwell = mod(-(phi+PI)*12/PI,dataset(24))#-(phi+PI)*12/PI
    
    
    mms_MLat = round(toDegrees(theta),3)
    mms_MLT = round(copy(MLT_dwell),3)
    mms_r = round(copy(mms_r),3)
    mms_MLT.putProperty(QDataSet.NAME,'MLT')
    mms_MLat.putProperty(QDataSet.NAME,'MLat')
    mms_r.putProperty(QDataSet.NAME,'Re')
    mms_MLT.putProperty(QDataSet.LABEL,'MLT')
    mms_MLat.putProperty(QDataSet.LABEL,'MLat')
    mms_r.putProperty(QDataSet.LABEL,'R!De!N')
    
    r = where(mms_MLT.ge(0).and(mms_MLT.le(24)))
    mms_MLT = mms_MLT[r]
    mms_MLat = mms_MLat[r]
    mms_r = mms_r[r]
    
    mms_ephem = bundle(mms_MLT,mms_MLat,mms_r)
    mms_ephem.putProperty(QDataSet.DEPEND_0,ephem_time)
    mms_ephem.putProperty(QDataSet.NAME,'mms_ephem')
  
    filename = 'C:/Users/Kristoff/Desktop/TEMP.txt'
    formatDataSet(mms_ephem,filename+'?header=rich&tformat=seconds')
    dom.plots[plot_number].setTicksURI('')
    dom.plots[plot_number].setTicksURI(filename+'?bundle=field1-field3&depend0=field0')

# ##################################################################################
    
starttime_input = getParam( 'Start Date and Time' , dom.plots[0].xaxis.range.min() , 'Any format you want, really' )
endtime_input = getParam( 'End Date and Time' , dom.plots[0].xaxis.range.max() , 'End of wave activity' )
    
mms_sc = getParam( 'MMS S/C' , 'mms1' , 'Which spacecraft do you want data from?' , ['mms1','mms2','mms3','mms4'] )

plot_number = getParam( 'Plot Number' , len(dom.getPlots())-1 , 'Which plot do you want to add ephem data to?' )

mms_ephemerizer( mms_sc , starttime_input , endtime_input , plot_number )
